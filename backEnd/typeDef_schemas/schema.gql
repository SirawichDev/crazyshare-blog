type User{
    _id: ID
    username: String!
    email: String!
    password: String!
    avatar: String
    joinDate: String
    bookmarks: [Article]
}
type Article{
    _id: ID
    title: String!
    imageUrl: String
    kind: [String]
    description: String!
    createdDate: String
    trumbs_up: Int
    createdBy: User!
    messages: [Message]
}
type Token {
    token: String!
}
type Message {
    _id: ID
    messageDetail: String!
    messageUser: User!
    messageDate: String
}
type Thumbsup {
    trumbs_up: Int
    bookmarks: [Article]
}
type Mutation {
    signinUser(username:String!, password: String!): Token!
    signupUser(username:String!, email: String!,password: String!): Token!
    createArticle(title: String!, imageUrl: String,kind: [String]! description:String!,trumbs_up:Int,createdBy:ID!): Article!
    chat(messageDetail: String!, userId: ID!, articleId: ID!): Message!
    like(username: String!,articleId: ID!): Thumbsup!
    dislike(username: String!,articleId: ID!): Thumbsup!
}
type ArticlePage {
    articles: [Article]
    hasMore: Boolean
}
type Query{
    currentUser: User
    searchArticle(searchSentense: String!): [Article]
    getUser: [User]
    getSingleArticle(articleId: ID!): Article!
    getArticle: [Article]
    infiniteScrollArticle(pageNum: Int!,pageSize: Int!): ArticlePage
}